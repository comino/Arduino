        -:    0:Source:../../cores/esp8266/SHA256Builder.h
        -:    0:Programs:16
        -:    1:/*
        -:    2:  MD5Builder.h - exposed md5 ROM functions for esp8266
        -:    3:
        -:    4:  Copyright (c) 2015 Hristo Gochkov, All rights reserved.
        -:    5:  Refactored by Sven Eliasson.
        -:    6:  This file is part of the esp8266 core for Arduino environment.
        -:    7:
        -:    8:  This library is free software; you can redistribute it and/or
        -:    9:  modify it under the terms of the GNU Lesser General Public
        -:   10:  License as published by the Free Software Foundation; either
        -:   11:  version 2.1 of the License, or (at your option) any later version.
        -:   12:
        -:   13:  This library is distributed in the hope that it will be useful,
        -:   14:  but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   15:  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
        -:   16:  Lesser General Public License for more details.
        -:   17:
        -:   18:  You should have received a copy of the GNU Lesser General Public
        -:   19:  License along with this library; if not, write to the Free Software
        -:   20:  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
        -:   21:*/
        -:   22:
        -:   23:#ifndef __ESP8266_SHA256_BUILDER__
        -:   24:#define __ESP8266_SHA256_BUILDER__
        -:   25:
        -:   26:#include <WString.h>
        -:   27:#include <Stream.h>
        -:   28:#include "sha256.h"
        -:   29:#include "HashBuilder.h"
        -:   30:
        -:   31:class SHA256Builder : public HashBuilder {
        -:   32:  private:
        -:   33:    const int HEX_STR_LEN = 32;
        -:   34:    sha256_context_t _ctx;
        -:   35:    void _init(void) override;
        -:   36:    void _update(uint8_t * data, uint16_t len) override;
        -:   37:    void _final() override;
function _ZN13SHA256Builder7_resultEv called 6 returned 100% blocks executed 100%
        6:   38:    std::vector<uint8_t> &_result(){ return _resultVector;}
        -:   39:    std::vector<uint8_t> _resultVector = {};
        -:   40:};
        -:   41:
        -:   42:
        -:   43:#endif
