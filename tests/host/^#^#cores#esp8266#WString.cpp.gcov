        -:    0:Source:../../cores/esp8266/WString.cpp
        -:    0:Programs:14
        -:    1:/*
        -:    2: WString.cpp - String library for Wiring & Arduino
        -:    3: ...mostly rewritten by Paul Stoffregen...
        -:    4: Copyright (c) 2009-10 Hernando Barragan.  All rights reserved.
        -:    5: Copyright 2011, Paul Stoffregen, paul@pjrc.com
        -:    6: Modified by Ivan Grokhotkov, 2014 - esp8266 support
        -:    7: Modified by Michael C. Miller, 2015 - esp8266 progmem support
        -:    8:
        -:    9: This library is free software; you can redistribute it and/or
        -:   10: modify it under the terms of the GNU Lesser General Public
        -:   11: License as published by the Free Software Foundation; either
        -:   12: version 2.1 of the License, or (at your option) any later version.
        -:   13:
        -:   14: This library is distributed in the hope that it will be useful,
        -:   15: but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   16: MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
        -:   17: Lesser General Public License for more details.
        -:   18:
        -:   19: You should have received a copy of the GNU Lesser General Public
        -:   20: License along with this library; if not, write to the Free Software
        -:   21: Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
        -:   22: */
        -:   23:
        -:   24:#include <Arduino.h>
        -:   25:#include "WString.h"
        -:   26:#include "stdlib_noniso.h"
        -:   27:
        -:   28:/*********************************************/
        -:   29:/*  Constructors                             */
        -:   30:/*********************************************/
        -:   31:
function _ZN6StringC2EPKc called 44 returned 100% blocks executed 100%
       44:   32:String::String(const char *cstr) {
       44:   33:    init();
call    0 returned 100%
       44:   34:    if(cstr)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
       44:   35:        copy(cstr, strlen(cstr));
call    0 returned 100%
       44:   36:}
        -:   37:
function _ZN6StringC2ERKS_ called 4 returned 100% blocks executed 100%
        4:   38:String::String(const String &value) {
        4:   39:    init();
call    0 returned 100%
        4:   40:    *this = value;
call    0 returned 100%
        4:   41:}
        -:   42:
function _ZN6StringC2EPK19__FlashStringHelper called 0 returned 0% blocks executed 0%
    #####:   43:String::String(const __FlashStringHelper *pstr) {
    #####:   44:    init();
call    0 never executed
    #####:   45:    *this = pstr; // see operator =
call    0 never executed
    #####:   46:}
        -:   47:
        -:   48:#ifdef __GXX_EXPERIMENTAL_CXX0X__
function _ZN6StringC2EOS_ called 11 returned 100% blocks executed 100%
       11:   49:String::String(String &&rval) {
       11:   50:    init();
call    0 returned 100%
       11:   51:    move(rval);
call    0 returned 100%
       11:   52:}
        -:   53:
function _ZN6StringC2EO15StringSumHelper called 0 returned 0% blocks executed 0%
    #####:   54:String::String(StringSumHelper &&rval) {
    #####:   55:    init();
call    0 never executed
    #####:   56:    move(rval);
call    0 never executed
    #####:   57:}
        -:   58:#endif
        -:   59:
function _ZN6StringC2Ec called 0 returned 0% blocks executed 0%
    #####:   60:String::String(char c) {
    #####:   61:    init();
call    0 never executed
        -:   62:    char buf[2];
    #####:   63:    buf[0] = c;
    #####:   64:    buf[1] = 0;
    #####:   65:    *this = buf;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   66:}
        -:   67:
function _ZN6StringC2Ehh called 0 returned 0% blocks executed 0%
    #####:   68:String::String(unsigned char value, unsigned char base) {
    #####:   69:    init();
call    0 never executed
        -:   70:    char buf[1 + 8 * sizeof(unsigned char)];
    #####:   71:    utoa(value, buf, base);
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   72:    *this = buf;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   73:}
        -:   74:
function _ZN6StringC2Eih called 0 returned 0% blocks executed 0%
    #####:   75:String::String(int value, unsigned char base) {
    #####:   76:    init();
call    0 never executed
        -:   77:    char buf[2 + 8 * sizeof(int)];
    #####:   78:    itoa(value, buf, base);
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   79:    *this = buf;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   80:}
        -:   81:
function _ZN6StringC2Ejh called 0 returned 0% blocks executed 0%
    #####:   82:String::String(unsigned int value, unsigned char base) {
    #####:   83:    init();
call    0 never executed
        -:   84:    char buf[1 + 8 * sizeof(unsigned int)];
    #####:   85:    utoa(value, buf, base);
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   86:    *this = buf;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   87:}
        -:   88:
function _ZN6StringC2Elh called 0 returned 0% blocks executed 0%
    #####:   89:String::String(long value, unsigned char base) {
    #####:   90:    init();
call    0 never executed
        -:   91:    char buf[2 + 8 * sizeof(long)];
    #####:   92:    ltoa(value, buf, base);
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   93:    *this = buf;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   94:}
        -:   95:
function _ZN6StringC2Emh called 0 returned 0% blocks executed 0%
    #####:   96:String::String(unsigned long value, unsigned char base) {
    #####:   97:    init();
call    0 never executed
        -:   98:    char buf[1 + 8 * sizeof(unsigned long)];
    #####:   99:    ultoa(value, buf, base);
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  100:    *this = buf;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  101:}
        -:  102:
function _ZN6StringC2Efh called 0 returned 0% blocks executed 0%
    #####:  103:String::String(float value, unsigned char decimalPlaces) {
    #####:  104:    init();
call    0 never executed
        -:  105:    char buf[33];
    #####:  106:    *this = dtostrf(value, (decimalPlaces + 2), decimalPlaces, buf);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  107:}
        -:  108:
function _ZN6StringC2Edh called 0 returned 0% blocks executed 0%
    #####:  109:String::String(double value, unsigned char decimalPlaces) {
    #####:  110:    init();
call    0 never executed
        -:  111:    char buf[33];
    #####:  112:    *this = dtostrf(value, (decimalPlaces + 2), decimalPlaces, buf);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  113:}
        -:  114:
function _ZN6StringD2Ev called 59 returned 100% blocks executed 100%
      118:  115:String::~String() {
       59:  116:    if(buffer) {
branch  0 taken 81% (fallthrough)
branch  1 taken 19%
       48:  117:        free(buffer);
        -:  118:    }
       59:  119:    init();
call    0 returned 100%
       59:  120:}
        -:  121:
        -:  122:// /*********************************************/
        -:  123:// /*  Memory Management                        */
        -:  124:// /*********************************************/
        -:  125:
function _ZN6String4initEv called 118 returned 100% blocks executed 100%
      118:  126:inline void String::init(void) {
      118:  127:    buffer = NULL;
      118:  128:    capacity = 0;
      118:  129:    len = 0;
      118:  130:}
        -:  131:
function _ZN6String10invalidateEv called 0 returned 0% blocks executed 0%
    #####:  132:void String::invalidate(void) {
    #####:  133:    if(buffer)
branch  0 never executed
branch  1 never executed
    #####:  134:        free(buffer);
    #####:  135:    init();
call    0 never executed
    #####:  136:}
        -:  137:
function _ZN6String7reserveEj called 66 returned 100% blocks executed 90%
       66:  138:unsigned char String::reserve(unsigned int size) {
       66:  139:    if(buffer && capacity >= size)
branch  0 taken 27% (fallthrough)
branch  1 taken 73%
branch  2 taken 83% (fallthrough)
branch  3 taken 17%
       15:  140:        return 1;
       51:  141:    if(changeBuffer(size)) {
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
       51:  142:        if(len == 0)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
       51:  143:            buffer[0] = 0;
       51:  144:        return 1;
        -:  145:    }
    #####:  146:    return 0;
        -:  147:}
        -:  148:
function _ZN6String12changeBufferEj called 51 returned 100% blocks executed 83%
       51:  149:unsigned char String::changeBuffer(unsigned int maxStrLen) {
       51:  150:    size_t newSize = (maxStrLen + 16) & (~0xf);
       51:  151:    char *newbuffer = (char *) realloc(buffer, newSize);
       51:  152:    if(newbuffer) {
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
       51:  153:        size_t oldSize = capacity + 1; // include NULL.
       51:  154:        if (newSize > oldSize)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:  155:        {
       51:  156:            memset(newbuffer + oldSize, 0, newSize - oldSize);
        -:  157:        }
       51:  158:        capacity = newSize - 1;
       51:  159:        buffer = newbuffer;
       51:  160:        return 1;
        -:  161:    }
    #####:  162:    buffer = newbuffer;
    #####:  163:    return 0;
        -:  164:}
        -:  165:
        -:  166:// /*********************************************/
        -:  167:// /*  Copy and Move                            */
        -:  168:// /*********************************************/
        -:  169:
function _ZN6String4copyEPKcj called 48 returned 100% blocks executed 67%
       48:  170:String & String::copy(const char *cstr, unsigned int length) {
       48:  171:    if(!reserve(length)) {
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
    #####:  172:        invalidate();
call    0 never executed
    #####:  173:        return *this;
        -:  174:    }
       48:  175:    len = length;
       48:  176:    strcpy(buffer, cstr);
       48:  177:    return *this;
        -:  178:}
        -:  179:
function _ZN6String4copyEPK19__FlashStringHelperj called 0 returned 0% blocks executed 0%
    #####:  180:String & String::copy(const __FlashStringHelper *pstr, unsigned int length) {
    #####:  181:    if (!reserve(length)) {
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  182:        invalidate();
call    0 never executed
    #####:  183:        return *this;
        -:  184:    }
    #####:  185:    len = length;
    #####:  186:    strcpy_P(buffer, (PGM_P)pstr);
call    0 never executed
    #####:  187:    return *this;
        -:  188:}
        -:  189:
        -:  190:#ifdef __GXX_EXPERIMENTAL_CXX0X__
function _ZN6String4moveERS_ called 11 returned 100% blocks executed 50%
       11:  191:void String::move(String &rhs) {
       11:  192:    if(buffer) {
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  193:        if(capacity >= rhs.len) {
branch  0 never executed
branch  1 never executed
    #####:  194:            strcpy(buffer, rhs.buffer);
    #####:  195:            len = rhs.len;
    #####:  196:            rhs.len = 0;
    #####:  197:            return;
        -:  198:        } else {
    #####:  199:            free(buffer);
        -:  200:        }
        -:  201:    }
       11:  202:    buffer = rhs.buffer;
       11:  203:    capacity = rhs.capacity;
       11:  204:    len = rhs.len;
       11:  205:    rhs.buffer = NULL;
       11:  206:    rhs.capacity = 0;
       11:  207:    rhs.len = 0;
        -:  208:}
        -:  209:#endif
        -:  210:
function _ZN6StringaSERKS_ called 4 returned 100% blocks executed 71%
        4:  211:String & String::operator =(const String &rhs) {
        4:  212:    if(this == &rhs)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  213:        return *this;
        -:  214:
        4:  215:    if(rhs.buffer)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        4:  216:        copy(rhs.buffer, rhs.len);
call    0 returned 100%
        -:  217:    else
    #####:  218:        invalidate();
call    0 never executed
        -:  219:
        4:  220:    return *this;
        -:  221:}
        -:  222:
        -:  223:#ifdef __GXX_EXPERIMENTAL_CXX0X__
function _ZN6StringaSEOS_ called 0 returned 0% blocks executed 0%
    #####:  224:String & String::operator =(String &&rval) {
    #####:  225:    if(this != &rval)
branch  0 never executed
branch  1 never executed
    #####:  226:        move(rval);
call    0 never executed
    #####:  227:    return *this;
        -:  228:}
        -:  229:
function _ZN6StringaSEO15StringSumHelper called 0 returned 0% blocks executed 0%
    #####:  230:String & String::operator =(StringSumHelper &&rval) {
    #####:  231:    if(this != &rval)
branch  0 never executed
branch  1 never executed
    #####:  232:        move(rval);
call    0 never executed
    #####:  233:    return *this;
        -:  234:}
        -:  235:#endif
        -:  236:
function _ZN6StringaSEPKc called 0 returned 0% blocks executed 0%
    #####:  237:String & String::operator =(const char *cstr) {
    #####:  238:    if(cstr)
branch  0 never executed
branch  1 never executed
    #####:  239:        copy(cstr, strlen(cstr));
call    0 never executed
        -:  240:    else
    #####:  241:        invalidate();
call    0 never executed
        -:  242:
    #####:  243:    return *this;
        -:  244:}
        -:  245:
function _ZN6StringaSEPK19__FlashStringHelper called 0 returned 0% blocks executed 0%
    #####:  246:String & String::operator = (const __FlashStringHelper *pstr)
        -:  247:{
    #####:  248:    if (pstr) copy(pstr, strlen_P((PGM_P)pstr));
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
    #####:  249:    else invalidate();
call    0 never executed
        -:  250:
    #####:  251:    return *this;
        -:  252:}
        -:  253:
        -:  254:// /*********************************************/
        -:  255:// /*  concat                                   */
        -:  256:// /*********************************************/
        -:  257:
function _ZN6String6concatERKS_ called 0 returned 0% blocks executed 0%
    #####:  258:unsigned char String::concat(const String &s) {
    #####:  259:    return concat(s.buffer, s.len);
call    0 never executed
        -:  260:}
        -:  261:
function _ZN6String6concatEPKcj called 15 returned 100% blocks executed 67%
       15:  262:unsigned char String::concat(const char *cstr, unsigned int length) {
       15:  263:    unsigned int newlen = len + length;
       15:  264:    if(!cstr)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  265:        return 0;
       15:  266:    if(length == 0)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  267:        return 1;
       15:  268:    if(!reserve(newlen))
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
    #####:  269:        return 0;
       15:  270:    strcpy(buffer + len, cstr);
       15:  271:    len = newlen;
       15:  272:    return 1;
        -:  273:}
        -:  274:
function _ZN6String6concatEPKc called 0 returned 0% blocks executed 0%
    #####:  275:unsigned char String::concat(const char *cstr) {
    #####:  276:    if(!cstr)
branch  0 never executed
branch  1 never executed
    #####:  277:        return 0;
    #####:  278:    return concat(cstr, strlen(cstr));
call    0 never executed
        -:  279:}
        -:  280:
function _ZN6String6concatEc called 15 returned 100% blocks executed 100%
       15:  281:unsigned char String::concat(char c) {
        -:  282:    char buf[2];
       15:  283:    buf[0] = c;
       15:  284:    buf[1] = 0;
       15:  285:    return concat(buf, 1);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:  286:}
        -:  287:
function _ZN6String6concatEh called 0 returned 0% blocks executed 0%
    #####:  288:unsigned char String::concat(unsigned char num) {
        -:  289:    char buf[1 + 3 * sizeof(unsigned char)];
    #####:  290:    itoa(num, buf, 10);
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  291:    return concat(buf, strlen(buf));
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  292:}
        -:  293:
function _ZN6String6concatEi called 0 returned 0% blocks executed 0%
    #####:  294:unsigned char String::concat(int num) {
        -:  295:    char buf[2 + 3 * sizeof(int)];
    #####:  296:    itoa(num, buf, 10);
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  297:    return concat(buf, strlen(buf));
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  298:}
        -:  299:
function _ZN6String6concatEj called 0 returned 0% blocks executed 0%
    #####:  300:unsigned char String::concat(unsigned int num) {
        -:  301:    char buf[1 + 3 * sizeof(unsigned int)];
    #####:  302:    utoa(num, buf, 10);
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  303:    return concat(buf, strlen(buf));
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  304:}
        -:  305:
function _ZN6String6concatEl called 0 returned 0% blocks executed 0%
    #####:  306:unsigned char String::concat(long num) {
        -:  307:    char buf[2 + 3 * sizeof(long)];
    #####:  308:    ltoa(num, buf, 10);
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  309:    return concat(buf, strlen(buf));
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  310:}
        -:  311:
function _ZN6String6concatEm called 0 returned 0% blocks executed 0%
    #####:  312:unsigned char String::concat(unsigned long num) {
        -:  313:    char buf[1 + 3 * sizeof(unsigned long)];
    #####:  314:    ultoa(num, buf, 10);
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  315:    return concat(buf, strlen(buf));
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  316:}
        -:  317:
function _ZN6String6concatEf called 0 returned 0% blocks executed 0%
    #####:  318:unsigned char String::concat(float num) {
        -:  319:    char buf[20];
    #####:  320:    char* string = dtostrf(num, 4, 2, buf);
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  321:    return concat(string, strlen(string));
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  322:}
        -:  323:
function _ZN6String6concatEd called 0 returned 0% blocks executed 0%
    #####:  324:unsigned char String::concat(double num) {
        -:  325:    char buf[20];
    #####:  326:    char* string = dtostrf(num, 4, 2, buf);
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  327:    return concat(string, strlen(string));
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  328:}
        -:  329:
function _ZN6String6concatEPK19__FlashStringHelper called 0 returned 0% blocks executed 0%
    #####:  330:unsigned char String::concat(const __FlashStringHelper * str) {
    #####:  331:    if (!str) return 0;
branch  0 never executed
branch  1 never executed
    #####:  332:    int length = strlen_P((PGM_P)str);
call    0 never executed
    #####:  333:    if (length == 0) return 1;
branch  0 never executed
branch  1 never executed
    #####:  334:    unsigned int newlen = len + length;
    #####:  335:    if (!reserve(newlen)) return 0;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  336:    strcpy_P(buffer + len, (PGM_P)str);
call    0 never executed
    #####:  337:    len = newlen;
    #####:  338:    return 1;
        -:  339:}
        -:  340:
        -:  341:/*********************************************/
        -:  342:/*  Concatenate                              */
        -:  343:/*********************************************/
        -:  344:
function _ZplRK15StringSumHelperRK6String called 0 returned 0% blocks executed 0%
    #####:  345:StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs) {
    #####:  346:    StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
    #####:  347:    if(!a.concat(rhs.buffer, rhs.len))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  348:        a.invalidate();
call    0 never executed
    #####:  349:    return a;
        -:  350:}
        -:  351:
function _ZplRK15StringSumHelperPKc called 0 returned 0% blocks executed 0%
    #####:  352:StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr) {
    #####:  353:    StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
    #####:  354:    if(!cstr || !a.concat(cstr, strlen(cstr)))
branch  0 never executed
branch  1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
    #####:  355:        a.invalidate();
call    0 never executed
    #####:  356:    return a;
        -:  357:}
        -:  358:
function _ZplRK15StringSumHelperc called 0 returned 0% blocks executed 0%
    #####:  359:StringSumHelper & operator +(const StringSumHelper &lhs, char c) {
    #####:  360:    StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
    #####:  361:    if(!a.concat(c))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  362:        a.invalidate();
call    0 never executed
    #####:  363:    return a;
        -:  364:}
        -:  365:
function _ZplRK15StringSumHelperh called 0 returned 0% blocks executed 0%
    #####:  366:StringSumHelper & operator +(const StringSumHelper &lhs, unsigned char num) {
    #####:  367:    StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
    #####:  368:    if(!a.concat(num))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  369:        a.invalidate();
call    0 never executed
    #####:  370:    return a;
        -:  371:}
        -:  372:
function _ZplRK15StringSumHelperi called 0 returned 0% blocks executed 0%
    #####:  373:StringSumHelper & operator +(const StringSumHelper &lhs, int num) {
    #####:  374:    StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
    #####:  375:    if(!a.concat(num))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  376:        a.invalidate();
call    0 never executed
    #####:  377:    return a;
        -:  378:}
        -:  379:
function _ZplRK15StringSumHelperj called 0 returned 0% blocks executed 0%
    #####:  380:StringSumHelper & operator +(const StringSumHelper &lhs, unsigned int num) {
    #####:  381:    StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
    #####:  382:    if(!a.concat(num))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  383:        a.invalidate();
call    0 never executed
    #####:  384:    return a;
        -:  385:}
        -:  386:
function _ZplRK15StringSumHelperl called 0 returned 0% blocks executed 0%
    #####:  387:StringSumHelper & operator +(const StringSumHelper &lhs, long num) {
    #####:  388:    StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
    #####:  389:    if(!a.concat(num))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  390:        a.invalidate();
call    0 never executed
    #####:  391:    return a;
        -:  392:}
        -:  393:
function _ZplRK15StringSumHelperm called 0 returned 0% blocks executed 0%
    #####:  394:StringSumHelper & operator +(const StringSumHelper &lhs, unsigned long num) {
    #####:  395:    StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
    #####:  396:    if(!a.concat(num))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  397:        a.invalidate();
call    0 never executed
    #####:  398:    return a;
        -:  399:}
        -:  400:
function _ZplRK15StringSumHelperf called 0 returned 0% blocks executed 0%
    #####:  401:StringSumHelper & operator +(const StringSumHelper &lhs, float num) {
    #####:  402:    StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
    #####:  403:    if(!a.concat(num))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  404:        a.invalidate();
call    0 never executed
    #####:  405:    return a;
        -:  406:}
        -:  407:
function _ZplRK15StringSumHelperd called 0 returned 0% blocks executed 0%
    #####:  408:StringSumHelper & operator +(const StringSumHelper &lhs, double num) {
    #####:  409:    StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
    #####:  410:    if(!a.concat(num))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  411:        a.invalidate();
call    0 never executed
    #####:  412:    return a;
        -:  413:}
        -:  414:
function _ZplRK15StringSumHelperPK19__FlashStringHelper called 0 returned 0% blocks executed 0%
    #####:  415:StringSumHelper & operator + (const StringSumHelper &lhs, const __FlashStringHelper *rhs)
        -:  416:{
    #####:  417:    StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
    #####:  418:    if (!a.concat(rhs))	a.invalidate();
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
    #####:  419:    return a;
        -:  420:}
        -:  421:
        -:  422:// /*********************************************/
        -:  423:// /*  Comparison                               */
        -:  424:// /*********************************************/
        -:  425:
function _ZNK6String9compareToERKS_ called 60 returned 100% blocks executed 36%
       60:  426:int String::compareTo(const String &s) const {
       60:  427:    if(!buffer || !s.buffer) {
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
    #####:  428:        if(s.buffer && s.len > 0)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:  429:            return 0 - *(unsigned char *) s.buffer;
    #####:  430:        if(buffer && len > 0)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:  431:            return *(unsigned char *) buffer;
    #####:  432:        return 0;
        -:  433:    }
       60:  434:    return strcmp(buffer, s.buffer);
        -:  435:}
        -:  436:
function _ZNK6String6equalsERKS_ called 0 returned 0% blocks executed 0%
    #####:  437:unsigned char String::equals(const String &s2) const {
    #####:  438:    return (len == s2.len && compareTo(s2) == 0);
branch  0 never executed
branch  1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
        -:  439:}
        -:  440:
function _ZNK6String6equalsEPKc called 8 returned 100% blocks executed 40%
        8:  441:unsigned char String::equals(const char *cstr) const {
        8:  442:    if(len == 0)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  443:        return (cstr == NULL || *cstr == 0);
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        8:  444:    if(cstr == NULL)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  445:        return buffer[0] == 0;
        8:  446:    return strcmp(buffer, cstr) == 0;
        -:  447:}
        -:  448:
function _ZNK6StringltERKS_ called 60 returned 100% blocks executed 100%
       60:  449:unsigned char String::operator<(const String &rhs) const {
       60:  450:    return compareTo(rhs) < 0;
call    0 returned 100%
        -:  451:}
        -:  452:
function _ZNK6StringgtERKS_ called 0 returned 0% blocks executed 0%
    #####:  453:unsigned char String::operator>(const String &rhs) const {
    #####:  454:    return compareTo(rhs) > 0;
call    0 never executed
        -:  455:}
        -:  456:
function _ZNK6StringleERKS_ called 0 returned 0% blocks executed 0%
    #####:  457:unsigned char String::operator<=(const String &rhs) const {
    #####:  458:    return compareTo(rhs) <= 0;
call    0 never executed
        -:  459:}
        -:  460:
function _ZNK6StringgeERKS_ called 0 returned 0% blocks executed 0%
    #####:  461:unsigned char String::operator>=(const String &rhs) const {
    #####:  462:    return compareTo(rhs) >= 0;
call    0 never executed
        -:  463:}
        -:  464:
function _ZNK6String16equalsIgnoreCaseERKS_ called 0 returned 0% blocks executed 0%
    #####:  465:unsigned char String::equalsIgnoreCase(const String &s2) const {
    #####:  466:    if(this == &s2)
branch  0 never executed
branch  1 never executed
    #####:  467:        return 1;
    #####:  468:    if(len != s2.len)
branch  0 never executed
branch  1 never executed
    #####:  469:        return 0;
    #####:  470:    if(len == 0)
branch  0 never executed
branch  1 never executed
    #####:  471:        return 1;
    #####:  472:    const char *p1 = buffer;
    #####:  473:    const char *p2 = s2.buffer;
    #####:  474:    while(*p1) {
branch  0 never executed
branch  1 never executed
    #####:  475:        if(tolower(*p1++) != tolower(*p2++))
branch  0 never executed
branch  1 never executed
    #####:  476:            return 0;
        -:  477:    }
    #####:  478:    return 1;
        -:  479:}
        -:  480:
function _ZNK6String10startsWithERKS_ called 0 returned 0% blocks executed 0%
    #####:  481:unsigned char String::startsWith(const String &s2) const {
    #####:  482:    if(len < s2.len)
branch  0 never executed
branch  1 never executed
    #####:  483:        return 0;
    #####:  484:    return startsWith(s2, 0);
call    0 never executed
        -:  485:}
        -:  486:
function _ZNK6String10startsWithERKS_j called 0 returned 0% blocks executed 0%
    #####:  487:unsigned char String::startsWith(const String &s2, unsigned int offset) const {
    #####:  488:    if(offset > len - s2.len || !buffer || !s2.buffer)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
    #####:  489:        return 0;
    #####:  490:    return strncmp(&buffer[offset], s2.buffer, s2.len) == 0;
        -:  491:}
        -:  492:
function _ZNK6String8endsWithERKS_ called 0 returned 0% blocks executed 0%
    #####:  493:unsigned char String::endsWith(const String &s2) const {
    #####:  494:    if(len < s2.len || !buffer || !s2.buffer)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
    #####:  495:        return 0;
    #####:  496:    return strcmp(&buffer[len - s2.len], s2.buffer) == 0;
        -:  497:}
        -:  498:
        -:  499:// /*********************************************/
        -:  500:// /*  Character Access                         */
        -:  501:// /*********************************************/
        -:  502:
function _ZNK6String6charAtEj called 220 returned 100% blocks executed 100%
      220:  503:char String::charAt(unsigned int loc) const {
      220:  504:    return operator[](loc);
call    0 returned 100%
        -:  505:}
        -:  506:
function _ZN6String9setCharAtEjc called 0 returned 0% blocks executed 0%
    #####:  507:void String::setCharAt(unsigned int loc, char c) {
    #####:  508:    if(loc < len)
branch  0 never executed
branch  1 never executed
    #####:  509:        buffer[loc] = c;
    #####:  510:}
        -:  511:
function _ZN6StringixEj called 0 returned 0% blocks executed 0%
    #####:  512:char & String::operator[](unsigned int index) {
        -:  513:    static char dummy_writable_char;
    #####:  514:    if(index >= len || !buffer) {
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:  515:        dummy_writable_char = 0;
    #####:  516:        return dummy_writable_char;
        -:  517:    }
    #####:  518:    return buffer[index];
        -:  519:}
        -:  520:
function _ZNK6StringixEj called 220 returned 100% blocks executed 80%
      220:  521:char String::operator[](unsigned int index) const {
      220:  522:    if(index >= len || !buffer)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
    #####:  523:        return 0;
      220:  524:    return buffer[index];
        -:  525:}
        -:  526:
function _ZNK6String8getBytesEPhjj called 0 returned 0% blocks executed 0%
    #####:  527:void String::getBytes(unsigned char *buf, unsigned int bufsize, unsigned int index) const {
    #####:  528:    if(!bufsize || !buf)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:  529:        return;
    #####:  530:    if(index >= len) {
branch  0 never executed
branch  1 never executed
    #####:  531:        buf[0] = 0;
    #####:  532:        return;
        -:  533:    }
    #####:  534:    unsigned int n = bufsize - 1;
    #####:  535:    if(n > len - index)
branch  0 never executed
branch  1 never executed
    #####:  536:        n = len - index;
    #####:  537:    strncpy((char *) buf, buffer + index, n);
    #####:  538:    buf[n] = 0;
        -:  539:}
        -:  540:
        -:  541:// /*********************************************/
        -:  542:// /*  Search                                   */
        -:  543:// /*********************************************/
        -:  544:
function _ZNK6String7indexOfEc called 0 returned 0% blocks executed 0%
    #####:  545:int String::indexOf(char c) const {
    #####:  546:    return indexOf(c, 0);
call    0 never executed
        -:  547:}
        -:  548:
function _ZNK6String7indexOfEcj called 0 returned 0% blocks executed 0%
    #####:  549:int String::indexOf(char ch, unsigned int fromIndex) const {
    #####:  550:    if(fromIndex >= len)
branch  0 never executed
branch  1 never executed
    #####:  551:        return -1;
    #####:  552:    const char* temp = strchr(buffer + fromIndex, ch);
call    0 never executed
    #####:  553:    if(temp == NULL)
branch  0 never executed
branch  1 never executed
    #####:  554:        return -1;
    #####:  555:    return temp - buffer;
        -:  556:}
        -:  557:
function _ZNK6String7indexOfERKS_ called 0 returned 0% blocks executed 0%
    #####:  558:int String::indexOf(const String &s2) const {
    #####:  559:    return indexOf(s2, 0);
call    0 never executed
        -:  560:}
        -:  561:
function _ZNK6String7indexOfERKS_j called 0 returned 0% blocks executed 0%
    #####:  562:int String::indexOf(const String &s2, unsigned int fromIndex) const {
    #####:  563:    if(fromIndex >= len)
branch  0 never executed
branch  1 never executed
    #####:  564:        return -1;
    #####:  565:    const char *found = strstr(buffer + fromIndex, s2.buffer);
call    0 never executed
    #####:  566:    if(found == NULL)
branch  0 never executed
branch  1 never executed
    #####:  567:        return -1;
    #####:  568:    return found - buffer;
        -:  569:}
        -:  570:
function _ZNK6String11lastIndexOfEc called 0 returned 0% blocks executed 0%
    #####:  571:int String::lastIndexOf(char theChar) const {
    #####:  572:    return lastIndexOf(theChar, len - 1);
call    0 never executed
        -:  573:}
        -:  574:
function _ZNK6String11lastIndexOfEcj called 0 returned 0% blocks executed 0%
    #####:  575:int String::lastIndexOf(char ch, unsigned int fromIndex) const {
    #####:  576:    if(fromIndex >= len)
branch  0 never executed
branch  1 never executed
    #####:  577:        return -1;
    #####:  578:    char tempchar = buffer[fromIndex + 1];
    #####:  579:    buffer[fromIndex + 1] = '\0';
    #####:  580:    char* temp = strrchr(buffer, ch);
call    0 never executed
    #####:  581:    buffer[fromIndex + 1] = tempchar;
    #####:  582:    if(temp == NULL)
branch  0 never executed
branch  1 never executed
    #####:  583:        return -1;
    #####:  584:    return temp - buffer;
        -:  585:}
        -:  586:
function _ZNK6String11lastIndexOfERKS_ called 0 returned 0% blocks executed 0%
    #####:  587:int String::lastIndexOf(const String &s2) const {
    #####:  588:    return lastIndexOf(s2, len - s2.len);
call    0 never executed
        -:  589:}
        -:  590:
function _ZNK6String11lastIndexOfERKS_j called 0 returned 0% blocks executed 0%
    #####:  591:int String::lastIndexOf(const String &s2, unsigned int fromIndex) const {
    #####:  592:    if(s2.len == 0 || len == 0 || s2.len > len)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
    #####:  593:        return -1;
    #####:  594:    if(fromIndex >= len)
branch  0 never executed
branch  1 never executed
    #####:  595:        fromIndex = len - 1;
    #####:  596:    int found = -1;
    #####:  597:    for(char *p = buffer; p <= buffer + fromIndex; p++) {
branch  0 never executed
branch  1 never executed
    #####:  598:        p = strstr(p, s2.buffer);
call    0 never executed
    #####:  599:        if(!p)
branch  0 never executed
branch  1 never executed
    #####:  600:            break;
    #####:  601:        if((unsigned int) (p - buffer) <= fromIndex)
branch  0 never executed
branch  1 never executed
    #####:  602:            found = p - buffer;
        -:  603:    }
    #####:  604:    return found;
        -:  605:}
        -:  606:
function _ZNK6String9substringEjj called 0 returned 0% blocks executed 0%
    #####:  607:String String::substring(unsigned int left, unsigned int right) const {
    #####:  608:    if(left > right) {
branch  0 never executed
branch  1 never executed
    #####:  609:        unsigned int temp = right;
    #####:  610:        right = left;
    #####:  611:        left = temp;
        -:  612:    }
    #####:  613:    String out;
call    0 never executed
    #####:  614:    if(left >= len)
branch  0 never executed
branch  1 never executed
    #####:  615:        return out;
    #####:  616:    if(right > len)
branch  0 never executed
branch  1 never executed
    #####:  617:        right = len;
    #####:  618:    char temp = buffer[right];  // save the replaced character
    #####:  619:    buffer[right] = '\0';
    #####:  620:    out = buffer + left;  // pointer arithmetic
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  621:    buffer[right] = temp;  //restore character
    #####:  622:    return out;
call    0 never executed
        -:  623:}
        -:  624:
        -:  625:// /*********************************************/
        -:  626:// /*  Modification                             */
        -:  627:// /*********************************************/
        -:  628:
function _ZN6String7replaceEcc called 0 returned 0% blocks executed 0%
    #####:  629:void String::replace(char find, char replace) {
    #####:  630:    if(!buffer)
branch  0 never executed
branch  1 never executed
    #####:  631:        return;
    #####:  632:    for(char *p = buffer; *p; p++) {
branch  0 never executed
branch  1 never executed
    #####:  633:        if(*p == find)
branch  0 never executed
branch  1 never executed
    #####:  634:            *p = replace;
        -:  635:    }
        -:  636:}
        -:  637:
function _ZN6String7replaceERKS_S1_ called 0 returned 0% blocks executed 0%
    #####:  638:void String::replace(const String& find, const String& replace) {
    #####:  639:    if(len == 0 || find.len == 0)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:  640:        return;
    #####:  641:    int diff = replace.len - find.len;
    #####:  642:    char *readFrom = buffer;
        -:  643:    char *foundAt;
    #####:  644:    if(diff == 0) {
branch  0 never executed
branch  1 never executed
    #####:  645:        while((foundAt = strstr(readFrom, find.buffer)) != NULL) {
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  646:            memcpy(foundAt, replace.buffer, replace.len);
    #####:  647:            readFrom = foundAt + replace.len;
        -:  648:        }
    #####:  649:    } else if(diff < 0) {
branch  0 never executed
branch  1 never executed
    #####:  650:        char *writeTo = buffer;
    #####:  651:        while((foundAt = strstr(readFrom, find.buffer)) != NULL) {
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  652:            unsigned int n = foundAt - readFrom;
    #####:  653:            memcpy(writeTo, readFrom, n);
    #####:  654:            writeTo += n;
    #####:  655:            memcpy(writeTo, replace.buffer, replace.len);
    #####:  656:            writeTo += replace.len;
    #####:  657:            readFrom = foundAt + find.len;
    #####:  658:            len += diff;
        -:  659:        }
    #####:  660:        strcpy(writeTo, readFrom);
        -:  661:    } else {
    #####:  662:        unsigned int size = len; // compute size needed for result
    #####:  663:        while((foundAt = strstr(readFrom, find.buffer)) != NULL) {
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  664:            readFrom = foundAt + find.len;
    #####:  665:            size += diff;
        -:  666:        }
    #####:  667:        if(size == len)
branch  0 never executed
branch  1 never executed
    #####:  668:            return;
    #####:  669:        if(size > capacity && !changeBuffer(size))
branch  0 never executed
branch  1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
    #####:  670:            return; // XXX: tell user!
    #####:  671:        int index = len - 1;
    #####:  672:        while(index >= 0 && (index = lastIndexOf(find, index)) >= 0) {
branch  0 never executed
branch  1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
    #####:  673:            readFrom = buffer + index + find.len;
    #####:  674:            memmove(readFrom + diff, readFrom, len - (readFrom - buffer));
    #####:  675:            len += diff;
    #####:  676:            buffer[len] = 0;
    #####:  677:            memcpy(buffer + index, replace.buffer, replace.len);
    #####:  678:            index--;
        -:  679:        }
        -:  680:    }
        -:  681:}
        -:  682:
function _ZN6String6removeEj called 0 returned 0% blocks executed 0%
    #####:  683:void String::remove(unsigned int index) {
        -:  684:    // Pass the biggest integer as the count. The remove method
        -:  685:    // below will take care of truncating it at the end of the
        -:  686:    // string.
    #####:  687:    remove(index, (unsigned int) -1);
call    0 never executed
    #####:  688:}
        -:  689:
function _ZN6String6removeEjj called 220 returned 100% blocks executed 63%
      220:  690:void String::remove(unsigned int index, unsigned int count) {
      220:  691:    if(index >= len) {
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  692:        return;
        -:  693:    }
      220:  694:    if(count <= 0) {
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  695:        return;
        -:  696:    }
      220:  697:    if(count > len - index) {
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  698:        count = len - index;
        -:  699:    }
      220:  700:    char *writeTo = buffer + index;
      220:  701:    len = len - count;
      220:  702:    strncpy(writeTo, buffer + index + count, len - index);
      220:  703:    buffer[len] = 0;
        -:  704:}
        -:  705:
function _ZN6String11toLowerCaseEv called 0 returned 0% blocks executed 0%
    #####:  706:void String::toLowerCase(void) {
    #####:  707:    if(!buffer)
branch  0 never executed
branch  1 never executed
    #####:  708:        return;
    #####:  709:    for(char *p = buffer; *p; p++) {
branch  0 never executed
branch  1 never executed
    #####:  710:        *p = tolower(*p);
        -:  711:    }
        -:  712:}
        -:  713:
function _ZN6String11toUpperCaseEv called 0 returned 0% blocks executed 0%
    #####:  714:void String::toUpperCase(void) {
    #####:  715:    if(!buffer)
branch  0 never executed
branch  1 never executed
    #####:  716:        return;
    #####:  717:    for(char *p = buffer; *p; p++) {
branch  0 never executed
branch  1 never executed
    #####:  718:        *p = toupper(*p);
        -:  719:    }
        -:  720:}
        -:  721:
function _ZN6String4trimEv called 0 returned 0% blocks executed 0%
    #####:  722:void String::trim(void) {
    #####:  723:    if(!buffer || len == 0)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:  724:        return;
    #####:  725:    char *begin = buffer;
    #####:  726:    while(isspace(*begin))
branch  0 never executed
branch  1 never executed
    #####:  727:        begin++;
    #####:  728:    char *end = buffer + len - 1;
    #####:  729:    while(isspace(*end) && end >= begin)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:  730:        end--;
    #####:  731:    len = end + 1 - begin;
    #####:  732:    if(begin > buffer)
branch  0 never executed
branch  1 never executed
    #####:  733:        memcpy(buffer, begin, len);
    #####:  734:    buffer[len] = 0;
        -:  735:}
        -:  736:
        -:  737:// /*********************************************/
        -:  738:// /*  Parsing / Conversion                     */
        -:  739:// /*********************************************/
        -:  740:
function _ZNK6String5toIntEv called 0 returned 0% blocks executed 0%
    #####:  741:long String::toInt(void) const {
    #####:  742:    if(buffer)
branch  0 never executed
branch  1 never executed
    #####:  743:        return atol(buffer);
call    0 never executed
    #####:  744:    return 0;
        -:  745:}
        -:  746:
function _ZNK6String7toFloatEv called 0 returned 0% blocks executed 0%
    #####:  747:float String::toFloat(void) const {
    #####:  748:    if(buffer)
branch  0 never executed
branch  1 never executed
    #####:  749:        return atof(buffer);
call    0 never executed
    #####:  750:    return 0;
        -:  751:}
